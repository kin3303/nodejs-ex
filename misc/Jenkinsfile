node {
    def commit_id
    stage('preparation') {
        checkout scm
    }
    stage('test with a DB') {
        if (env.DO_TEST == 'true') {
            def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
            //def myTestContainer = docker.build('node-test:latest') // Source 에 포함된 Dockerfile 로 빌드한 Container 를 사용시
            def myTestContainer = docker.image('node:latest')
            myTestContainer.pull()
            myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
                sh 'npm install --only=dev' 
                sh 'npm test'                     
            }                                   
            mysql.stop()
        }
    }
    stage('docker build/push') {
        if (env.DO_PUBLISH == 'true') {
            //docker.withRegistry('https://index.docker.io/v1/', 'nexus-registry') { //DockerHub
            docker.withRegistry('https://registry.letsgohomenow.com', 'nexus-registry') { //Nexus
                //def app = docker.build("kin3303/nodejs-ex:${env.TAG_NAME}", '.').push() //DockerHub
                def app = docker.build("${env.APP_IMAGE_NAME}:${env.TAG_NAME}", '.').push() //Neuxs
			}
        }                                  
    }
    stage('postman test') {
        if (env.DO_FUNCTION_TEST == 'true') {
            def newmanContainer = docker.image('postman/newman_alpine33')
            newmanContainer.pull()
            newmanContainer.withRun ('https://www.getpostman.com/collections/8a0c9bc08f062d12dcda')  {c ->
                newman 'https://www.postman.com/collections/8a0c9bc08f062d12dcda'
        }
     }
   }     
}
